@model IEnumerable<JunkOutDBModel.Bin>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<div style="display:inline;">
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
<!--
 Status: 
    <form method="get">
        <select id="status" name="status">
            <option value="available" selected="selected" >available</option>
            <option value="new">new</option>
            <option value="pending">Pending</option>
            <option value="confirmed">confirmed</option>
            <option value="delivered">delivered</option>
            <option value="completed">completed</option>
        </select>
    </form>
     
 --> 

    @using (Html.BeginForm("SortStatus", "Bins"))
    {

        @Html.DropDownList("status",
             new List<SelectListItem>
             {
                 new SelectListItem {Text = "all"},
                 new SelectListItem {Text = "new"},
                 new SelectListItem {Text = "pending"},
                 new SelectListItem {Text = "confirmed"},
                 new SelectListItem {Text = "delivered"},
                 new SelectListItem {Text = "completed"},
             },
             "Choose Status..."
             );

        @Html.DropDownList("binSize",
             new List<SelectListItem>
             {
                 new SelectListItem {Text = "all"},
                 new SelectListItem {Text = "10"},
                 new SelectListItem {Text = "14"},
                 new SelectListItem {Text = "20"},
             },
             "Choose Size..."
             );
        

        <input type="submit" value="Submit" />


    }

</div>



<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.BinSize)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FlatRate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MinTonnageAwarded)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MaxRentalDuration)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.BinSize)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FlatRate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MinTonnageAwarded)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MaxRentalDuration)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Status)
        </td>
        <td>
            @Html.ActionLink(" ", "Edit", new { id=item.ID }, new { @class = "glyphicon glyphicon-edit", title = "Edit" }) |
            @Html.ActionLink(" ", "Details", new { id=item.ID }, new { @class = "glyphicon glyphicon-info-sign", title = "Details" }) |
            @Html.ActionLink(" ", "Delete", new { id=item.ID }, new { @class = "glyphicon glyphicon-remove", title = "Delete" })
        </td>
    </tr>
}

</table>


<div style="padding:10px; border:1px solid black">
    <div><a href="@Url.Action("Report",new {id= "PDF"})"> Get Report PDF</a></div>
    <div><a href="@Url.Action("Report",new {id= "Excel"})"> Get Report Excel</a></div>
    <div><a href="@Url.Action("Report",new {id= "Word"})"> Get Report Word</a></div>
    <div><a href="@Url.Action("Report",new {id= "Image"})"> Get Report Image</a></div>
</div>
