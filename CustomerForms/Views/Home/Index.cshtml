<!--
    Author: Ramsha Tariq
    Main customer form page
-->


@using CustomerForms.Models
@model CustomerFormModel

@{
    ViewBag.Title = "Home Page";
}
<head>
    <title></title>
    <!-- Include meta tag to ensure proper rendering and touch zooming -->
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <script type="text/javascript" src="jquery.js"></script>
    <!-- Include the jQuery library -->
    <script src="http://code.jquery.com/jquery-1.11.3.min.js"></script>

    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCv-x3Oo0fLyDiLzOtZ9D47_oQUq02TNrY&libraries=places"></script>

    <link rel="stylesheet" type="text/css" href="~/Content/customerForm.css">

    <script>
        $(document).ready(function () {

            //Google api method for auto prediction
            google.maps.event.addDomListener(window, 'load', function () {
                var input = document.getElementById('streetaddress');
                var options = {
                    componentRestrictions: { country: 'CA' }
                };
                var places = new google.maps.places.Autocomplete(input, options);

                //Populating the fields for the Address section
                google.maps.event.addListener(places, 'place_changed', function () {
                    console.log(place);
                    var place = places.getPlace();
                    var address = place.formatted_address;
                    var value = address.split(",");
                    count = value.length;
                    streetAddress = value[0]
                    prov = value[count - 2];
                    city = value[count - 3];
                    var z = prov.split(" "); 
                    document.getElementById("province").value = z[1];
                    document.getElementById("city").value = city;
                    document.getElementById("streetaddress").value = streetAddress;
                    
                });
            });

            $("#go").click(function () {

                //Verifying the postal code based on green, gray and out of service area
                var reg1 = /^([A-Za-z][0-9][A-Za-z] [0-9][A-Za-z][0-9])$/;
                var reg2 = /^([A-Za-z][0-9][A-Za-z][0-9][A-Za-z][0-9])$/;
                if (reg1.test($('#pcode').val()) || reg2.test($('#pcode').val())) {
                    var ucp = ($("#pcode").val().toUpperCase());
                    var p3 = ucp.substring(0, 3);

                    var greenarea = ["L0J", "L0P", "L2H", "L2J", "L3B", "L3R", "L3T", "L3Z", "L4A", "L4B", "L4C", "L4E", "L4H", "L4J", "L4K", "L4L", "L4R", "L4T", "L4V", "L4W", "L4X", "L4Y", "L4Z", "L5A", "L5B", "L5C", "L5E", "L5G", "L5H", "L5J", "L5K", "L5L", "L5M", "L5N", "L5P", "L5R", "L5S", "L5T", "L5V", "L5W", "L6A", "L6G", "L6H", "L6J", "L6K", "L6L", "L6M", "L6P", "L6R", "L6S", "L6T", "L6V", "L6W", "L6X", "L6Y", "L6Z", "L7A", "L7G", "L7K", "L8G", "L9X", "L9Y", "M1G", "M1H", "M1J", "M1K", "M1L", "M1M", "M1N", "M1P", "M1R", "M1S", "M1T", "M1V", "M1W", "M2H", "M2J", "M2K", "M2L", "M2M", "M2N", "M2P", "M2R", "M3A", "M3B", "M3C", "M3H", "M3J", "M3K", "M3L", "M3M", "M3N", "M4A", "M4B", "M4C", "M4E", "M4G", "M4H", "M4J", "M4K", "M4L", "M4M", "M4N", "M4P", "M4R", "M4S", "M4T", "M4V", "M4W", "M4X", "M4Y", "M5A", "M5B", "M5C", "M5E", "M5G", "M5H", "M5J", "M5K", "M5L", "M5M", "M5N", "M5P", "M5R", "M5S", "M5T", "M5V", "M5W", "M5X", "M6A", "M6B", "M6C", "M6E", "M6G", "M6H", "M6J", "M6K", "M6L", "M6M", "M6N", "M6P", "M6R", "M6S", "M7A", "M7Y", "M8V", "M8W", "M8X", "M8Y", "M8Z", "M9A", "M9B", "M9C", "M9L", "M9M", "M9N", "M9P", "M9R", "M9V", "M9W", "V8G"];
                    var grayarea = ["L3P", "L3S", "L4G", "L4S", "L6B", "L6C", "L6E", "L7B", "L7C", "L7E", "L7J", "L7L", "L7M", "L7N", "L7P", "L7R", "L8E", "L8N", "L9A", "L9E", "L9T", "M1B", "M1C", "M1E", "M1X", "N1E"];

                    if ($.inArray(p3, greenarea) == -1) {
                        if ($.inArray(p3, grayarea) >= 0) {
                            alert("Extra charges may apply. An agent will contact you after placing an order.");
                            $("#slide-1").hide();
                            $("#slide-2").show('slow');
                        }
                        else {
                            alert("Sorry we don't offer services at the given location. Please email blah@blah.com for more information");
                        }
                    }
                    else {
                        $("#slide-1").hide();
                        $("#slide-2").show('slow');
                        $(".progressbar li:nth-child(2)").addClass("active");
                    }
                }
                else{
                    alert("Please enter into the formal of A9A 9A9");
                }
            });
          /*  $('#pcode').keypress(function (e) {
                if (e.which == 13) {
                    $("#slide-1").hide();
                    $("#slide-2").show('slow');
                }
            });*/
            $("#next_1").click(function () {
                //Dispalying the bins section if Bin Rental is selected
                // if (!$("input[name='order.JobType']:checked").val()) {
                if (!$("input[name='jobtype']:checked").val()){
                    alert('Please select a job type');
                }
                else {
                    $("#slide-2").hide();
                    $("#slide-3").show('slow');
                    $(".progressbar li:nth-child(3)").addClass("active");
                    if ($("input[name='jobtype']:checked").val() == "Bin Rental") {
                        $("#binsdiv").show();
                    }
                    else {
                        $("#binsdiv").hide();
                    }
                }
            });

            //Changing the progress bar status according to the slide panel
            $("#prev_1").click(function () {
                $("#slide-2").hide();
                $("#slide-1").show('slow');
                $(".progressbar li:nth-child(2)").removeClass("active");
            });
            $("#next_2").click(function () {
                //Validation for Dlivery and PickUp Date/ime
                if ((!$("#del").val())) {
                    alert("Please enter BOTH date and time for Delivery!");
                }
                else if ((!$("#pickup").val())) {
                    alert("Please enter BOTH date and time for Pick Up!");
                }  
                else { 
                    $("#slide-3").hide();
                    $("#slide-4").show('slow');
                    $('#poscode').val($('#pcode').val().toUpperCase());
                    $(".progressbar li:nth-child(4)").addClass("active");
                } 
            });
            //Changing the progress bar status according to the slide panel
            $("#prev_2").click(function () {
                $("#slide-3").hide();
                $("#slide-2").show('slow');
                $(".progressbar li:nth-child(3)").removeClass("active");
            });

            //Validation for all the fields in the Contact Information panel
            $("#fname").blur(function () {
                if ($(this).val() !== '') {
                    $(".firstname").addClass("has-success has-feedback").removeClass("has-error has-feedback");
                } else {
                    $(".firstname").removeClass("has-success has-feedback").addClass("has-error has-feedback");
                    $(this).attr("placeholder", "First Name is Required!");
                }
            });
            $("#lname").blur(function () {
                if ($(this).val() !== '') {
                    $(".lasttname").addClass("has-success has-feedback").removeClass("has-error has-feedback");
                } else {
                    $(".lastname").removeClass("has-success has-feedback").addClass("has-error has-feedback");
                    $(this).attr("placeholder", "Last Name is Required!");
                }
            });
            $("#email").blur(function () {
                if ($(this).val() !== '') {
                    $(".email").addClass("has-success has-feedback").removeClass("has-error has-feedback");
                } else {
                    $(".email").removeClass("has-success has-feedback").addClass("has-error has-feedback");
                    $(this).attr("placeholder", "Email is Required!");
                }
            });
            $("#phone").blur(function () {
                if ($(this).val() !== '') {
                    $(".phonenum").addClass("has-success has-feedback").removeClass("has-error has-feedback");
                } else {
                    $(".phonenum").removeClass("has-success has-feedback").addClass("has-error has-feedback");
                    $(this).attr("placeholder", "Phone Number is Required!");
                }
            });
            $("#phone").keyup(function (e) {
                if (/\D/g.test(this.value)) {
                    this.value = this.value.replace(/\D/g, '');
                }
            });
            $("#streetaddress").blur(function () {
                if ($(this).val() !== '') {
                    $(".streetaddress").addClass("has-success has-feedback").removeClass("has-error has-feedback");
                } else {
                    $(".streetaddress").removeClass("has-success has-feedback").addClass("has-error has-feedback");
                    $(this).attr("placeholder", "Street Address is Required!");
                }
            });
            $("#city").blur(function () {
                if ($(this).val() !== '') {
                    $(".city").addClass("has-success has-feedback").removeClass("has-error has-feedback");
                } else {
                    $(".city").removeClass("has-success has-feedback").addClass("has-error has-feedback");
                    $(this).attr("placeholder", "City is Required!");
                }
            });
            $("#next_3").click(function () {

                //Validation for empty fields
                if ($("#fname").val() == "" || $("#lname").val() == "" || $("#email").val() == "" || $("#phone").val() == "" || $("#streetaddress").val() == "" || $("#city").val() == "") {
                    alert("Please complete all the required fields!");
                }

                //Populate all the fields from the previous panel
                else {
                    $("#slide-4").hide();
                    $("#slide-5").show('slow');

                    $("#fnametxt").html($("#fname").val());
                    $("#lnametxt").html($("#lname").val());
                    $("#emailtxt").html($("#email").val());
                    $("#phonetxt").html($("#phone").val());
                    $("#compnametxt").html($("#compname").val());

                    $("#sitetypetxt").html($("#sitetype").val());
                    $("#streetaddresstxt").html($("#streetaddress").val());
                    $("#provincetxt").html($("#province").val());
                    $("#unittxt").html($("#unit").val());
                    $("#citytxt").html($("#city").val());
                    $("#pcodetxt").html($("#pcode").val().toUpperCase());

                    // $("#jobtypetxt").html($("input[name='order.JobType']:checked").val());
                    $("#jobtypetxt").html($("input[name='jobtype']:checked").val());

                    $("#deldateandtimetxt").html($("#del").val());
                    $("#pickupdateandtimetxt").html($("#pickup").val());
                    $(".progressbar li:nth-child(5)").addClass("active");
                }
            });
            //Changing the progress bar status according to the slide panel
            $("#prev_3").click(function () {
                $("#slide-4").hide();
                $("#slide-3").show('slow');
                $(".progressbar li:nth-child(4)").removeClass("active");
            });
            //Submitting the information to database
            $("#submit").click(function () {
                $("#slide-5").hide();
            });
            //Changing the progress bar status according to the slide panel
            $("#prev_4").click(function () {
                $("#slide-5").hide();
                $("#slide-4").show('slow');
                $(".progressbar li:nth-child(5)").removeClass("active");
            });
        });
    </script>
</head>
<body>
        <div class="container1">
            <ul class="progressbar">
                <li class="active">Postal Code Verification</li>
                <li>Job Type Service</li>
                <li>Schedule Appointment</li>
                <li>Contact Information</li>
                <li>Confirmation</li>
            </ul>
        </div>
    <form id="form1" runat="server" method="post">
        <div class="container" style="font-size: 16px">
            <div class="col-xs-12" style="margin: auto">
                <!--First Panel--> 
                <!--Postal Code Verification-->
                <div style="padding: 25px;" id="slide-1">
                    <h1 class="heading">Please enter your postal code:</h1>
                    <div class="divbg">
                        <img src="~/images/7.png" id="mappoint" />
                        <br />
                        <h3 style="text-align: center;">Postal Code:</h3>
                        <!--<input id="pcode" type="text" class="form-control" maxlength="7" placeholder="A9A 9A9"/> -->
                                
                        @Html.EditorFor(model => model.address.PostalCode, new { htmlAttributes = new { @class = "form-control", @id = "pcode", @maxlength = "7", @placeholder = "A9A 9A9" } })
                        
                        <div class="space">
                            <button type="button" class="btn btn-success" id="go">Go!</button>
                        </div>
                    </div>
                </div>
                <!--Second Panel-->
                <!--Job Type Services-->
                <div style="padding: 25px;" id="slide-2">
                    <h1 class="heading">Choose one Job Service!</h1>
                    <div class="divbg">
                        Click on the button to select one:
                        <div class="space">                            
                            <div class="row selectjobtype">
                                <div class="col-md-4" style="text-align: center">
                                    @*@Html.RadioButtonFor(model => model.order.JobType, "Bin Rental", new { @id = "binRental", @name="jobtype", @required = true})*@
                                    <input type="radio" name="jobtype" id="binRental" value="Bin Rental" required /> 
                                    <label for="binRental">Bin Rental</label>
                                </div>
                                <div class="col-md-4" style="text-align: center">
                                    @*@Html.RadioButtonFor(model => model.order.JobType, "Demolish", new { @id = "demolish", @name = "jobtype", @required = true })*@
                                    <input type="radio" name="jobtype" id="demolish" value="Demolish" required />
                                    <label for="demolish">Demolish</label>
                                </div>
                                <div class="col-md-4" style="text-align: center">
                                    @*@Html.RadioButtonFor(model => model.order.JobType, "Junk Removal", new { @id = "junkRemoval", @name = "jobtype", @required = true })*@
                                    <input type="radio" name="jobtype" id="junkRemoval" value="Junk Removal" required />
                                    <label for="junkRemoval">Junk Removal</label>
                                </div>
                            </div>
                        </div>
                        <div class="space">
                            <span class="col-md-6" style="text-align: center;"><button type="button" class="btn btn-danger" id="prev_1" style="width:50%">Previous</button></span>
                            <span class="col-md-6" style="text-align: center;"><button type="button" class="btn btn-success" id="next_1" style="width:50%">Next</button></span>
                        </div>
                    </div>
                </div>
                <!--Third Panel-->
                <!--Scedule Appointment Panel-->
                <div style="padding: 25px;" id="slide-3">
                    <h1 class="heading">Schedule Appointment</h1>
                    <div class="divbg">
                        <fieldset class="dimensions" id="binsdiv">
                            <legend class="f-border">Bin Size</legend>
                            Click on the image to select bin size:
                            <div class="space">
                                <div class="row">
                                    <div class="col-md-4" style="text-align: center">
                                        <input type="checkbox" id="binone" name="binone" /><label for="binone"></label>
                                        <br />
                                        <span><b>5 cubic yard </b></span>
                                        <br />
                                        Length: 12'
                                        <br />
                                        Width: 5'
                                        <br />
                                        Height: 2'
                                        <br />
                                    </div>
                                    <div class="col-md-4" style="text-align: center">
                                        <input type="checkbox" id="bintwo" name="bintwo" /><label for="bintwo"></label>
                                        <br />
                                        <span><b>10 cubic yard </b></span>
                                        <br />
                                        Length: 12'
                                        <br />
                                        Width: 6'
                                        <br />
                                        Height: 4'
                                        <br />
                                    </div>
                                    <div class="col-md-4" style="text-align: center">
                                        <input type="checkbox" id="binthree" name="binthree" /><label for="binthree"></label>
                                        <br />
                                        <span><b>14 cubic yard </b></span>
                                        <br />
                                        Length: 12'
                                        <br />
                                        Width: 6'
                                        <br />
                                        Height: 5.5'
                                        <br />
                                    </div>
                                </div>
                            </div>
                        </fieldset>
                        <div class="space">
                            <label for="comment" style="color: #468847;">
                                Please describe a little about the job (if you need extra bin, mention here):
                            </label>
                            @*<textarea class="form-control" rows="3" id="comment"></textarea>*@
                            @Html.TextAreaFor(model => model.orders.OrderNotes, new { rows = "3", @class = "form-control", @id ="comment" })
                        </div>
                        <fieldset class="dimensions">
                            <legend class="f-border">Schedule Appointment</legend>
                            <div id="appointment">
                                <p class="col-md-6">Delivery Date and Time: 
                                <input type="datetime-local" id="del" name="delivery" style="color: black">
                                @*@Html.EditorFor(model => Model.orders.DeliveryDateTime, new { htmlAttributes = new { @class = "form-control", id = "del" }})*@
                                </p>
                                <p class="col-md-6">Pick-Up Date and Time:
                                <input type="datetime-local" id="pickup" name="pickup" style="color: black">
                                    @*@Html.EditorFor(model => Model.orders.PickupDateTime, new { htmlAttributes = new { @class = "form-control", id = "pickup" } })*@
                                </p>
                            </div>
                        </fieldset>
                        <div class="space">
                            <span class="col-md-6" style="text-align: center;"><button type="button" class="btn btn-danger" id="prev_2" style="width:50%">Previous</button></span>
                            <span class="col-md-6" style="text-align: center;"><button type="button" class="btn btn-success" id="next_2" style="width:50%">Next</button></span>
                        </div>
                    </div>
                </div>
                <!--Fourth Panel-->
                <!--Contact Information Panel-->
                <div style="padding: 25px;" id="slide-4">
                    <h1 class="heading">Contact Information</h1>
                    <div class="divbg" style="font-size: 15px">
                        <div class="space" style="text-align:left">
                            <div class="form-group">
                               <!-- <label class="control-label col-md-2" for="fname">First Name:</label>
                                <div class="col-md-4">
                                    <input type="text" class="form-control" id="fname" placeholder="First Name" name="fname">
                                </div> 
                                <label class="control-label col-md-2" for="fname">Last Name:</label>
                                <div class="col-md-4">
                                    <input type="text" class="form-control" id="lname" placeholder="Last Name" name="lname">
                                </div>
                                  -->

                                @Html.LabelFor(model => model.customer.FirstName, htmlAttributes: new { @class = "control-label col-md-2 required" })
                                <div class="col-md-4 firstname">
                                    @Html.EditorFor(model => model.customer.FirstName, new { htmlAttributes = new { @class = "form-control", id = "fname" } })
                                </div>
                                @Html.LabelFor(model => model.customer.LastName, htmlAttributes: new { @class = "control-label col-md-2 required" })
                                <div class="col-md-4 lastname">
                                    @Html.EditorFor(model => model.customer.LastName, new { htmlAttributes = new { @class = "form-control", @id = "lname" } })
                                </div>
                                
                            </div>
                            <p style="padding: 10px"></p>
                            <div class="form-group">
                              <!--  <label class="control-label col-md-2" for="email">Email:</label>
                                <div class="col-md-4">
                                    <input type="email" class="form-control" id="email" placeholder="some@example.com" name="email">
                                </div>
                                <label class="control-label col-md-2" for="phone">Phone number:</label>
                                <div class="col-md-4">
                                    <input type="tel" class="form-control" id="phone" placeholder="" name="phone">
                                </div>
                                -->

                                @Html.LabelFor(model => model.customer.Email, htmlAttributes: new { @class = "control-label col-md-2 required" })
                                <div class="col-md-4 email">
                                    @Html.EditorFor(model => model.customer.Email, new { htmlAttributes = new { @class = "form-control", @id = "email" } })
                                </div>

                                @Html.LabelFor(model => model.customer.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2 required" })
                                <div class="col-md-4 phonenum">
                                    @Html.EditorFor(model => model.customer.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @id = "phone" } })
                                </div>
                            </div>
                            <p style="padding: 15px"></p>
                            <div class="form-group">
                                <!--
                                <div class="col-md-2">
                                    <label class="control-label" for="compname">Company Name:</label>
                                </div>
                                <div class="col-md-10">
                                    <input type="text" class="form-control" id="compname" name="compname">
                                </div>
                                    -->
                                @Html.LabelFor(model => model.customer.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.customer.CompanyName, new { htmlAttributes = new { @class = "form-control", @id = "compname" } })
                                </div>
                            </div> 
                        </div>

                        
                        <fieldset class="dimensions">
                            <legend class="f-border">Site Address</legend>
                            <div class="form-group">
                                <div class="col-md-4">
                                    <label for="sitetype" class="required">Select list (select one):</label>
                                    <!--<select class="form-control" id="sitetype">
                                        <option>Residence</option>
                                        <option>Household</option>
                                        <option>Office Building</option>
                                        <option>Apartment</option>
                                    </select> -->
                                    @*@Html.DropDownListFor(model => model.address.AddressType, new SelectList(Enum.GetValues(typeof(Site))), new { @class = "form-control", @id = "sitetype" })*@
                                    @{
                                        List<SelectListItem> listAddressType = new List<SelectListItem>();
                                        listAddressType.Add(new SelectListItem
                                        {
                                            Text = "Residential",
                                            Value = "Residential"
                                        });
                                        listAddressType.Add(new SelectListItem
                                        {
                                            Text = "Construction Site",
                                            Value = "Construction Site",
                                            Selected = true
                                        });
                                        listAddressType.Add(new SelectListItem
                                        {
                                            Text = "Commercial",
                                            Value = "Commercial"
                                        });
                                        listAddressType.Add(new SelectListItem
                                        {
                                            Text = "Retail",
                                            Value = "Retail"
                                        });
                                        listAddressType.Add(new SelectListItem
                                        {
                                            Text = "Others",
                                            Value = "Others"
                                        });

                                    }

                                    @Html.DropDownListFor(model => model.address.AddressType, listAddressType, "-- Address Type --", new { @class = "form-control", @id = "sitetype" })
                                
                                
                                
                                </div>
                                <div class="col-md-8 streetaddress">
                                   <!-- <label class="control-label" for="streetaddress">Street Address:</label>
                                    <input type="text" class="form-control" id="streetaddress" name="streetaddress"> -->
                                    @Html.LabelFor(model => model.address.StreetAddress, htmlAttributes: new { @class = "control-label col-md-8 required" })
                                    @Html.EditorFor(model => model.address.StreetAddress, new { htmlAttributes = new { @class = "form-control", @id = "streetaddress" } })
                                </div>
                            </div>
                            <p style="padding: 10px"></p>
                            <div class="form-group">
                                <div class="col-md-2">
                                    <!--<label class="control-label" for="unit">Apt/Unit#:</label>
                                    <input type="text" class="form-control" id="unit" name="unit">-->
                                    @Html.LabelFor(model => model.address.AptNum, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.address.AptNum, new { htmlAttributes = new { @class = "form-control", @id = "unit" } })


                                </div>

                                <div class="col-md-5 city">
                                   <!-- <label class="control-label" for="city">City:</label>
                                    <input type="text" class="form-control" id="city" name="city"> -->
                                    @Html.LabelFor(model => model.address.City, htmlAttributes: new { @class = "control-label required" })
                                    @Html.EditorFor(model => model.address.City, new { htmlAttributes = new { @class = "form-control", @id = "city" } })

                                </div> 
                               
                                <div class="col-md-2">
                                  <label for="province" class="required">Province:</label>
                                     <!-- <select class="form-control" id="province">
                                        <option>ON</option>
                                        <option>QC</option>
                                        <option>NB</option>
                                        <option>NS</option>
                                        <option>MB</option>
                                        <option>BC</option>
                                        <option>PE</option>
                                        <option>SK</option>
                                        <option>AB</option>
                                        <option>NL</option>
                                    </select>-->
                                    @Html.DropDownListFor(model => model.address.Province, new SelectList(Enum.GetValues(typeof(Prov))), new { @class = "form-control", @id="province" })
                                </div>
                                


                                <div class="col-md-3">
                                    <label class="control-label required" for="poscode">Postal Code:</label>
                                    <input type="text" class="form-control" id="poscode" name="poscode" disabled>
                                </div>
                            </div>
                            <p style="padding: 10px"></p>
                         <!--   <div class="form-group">
                                @Html.LabelFor(model => model.address.Country, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.address.Country, new { htmlAttributes = new { @class = "form-control", @id = "country" } })
                            </div> -->
                        </fieldset>
                        <div class="row">
                            <span class="col-md-6" style="text-align: center;"><button type="button" class="btn btn-danger" id="prev_3" style="width:50%">Previous</button></span>
                            <span class="col-md-6" style="text-align: center;"><button type="button" class="btn btn-success" id="next_3" style="width:50%">Next</button></span>
                        </div>
                    </div>
                </div>
                <!--Fifth Panel-->
                <!--Confirmation Panel-->
                <div style="padding: 25px;" id="slide-5">
                    <h1 class="heading">Confirmation</h1>
                    <div class="divbg" style="font-size: 15px">
                        <div class="space" style="text-align:left">
                            <div class="form-group">
                                <label class="control-label col-md-2">First Name:</label>
                                <span class="col-md-4" id="fnametxt"></span>
                                <label class="control-label col-md-2">Last Name:</label>
                                <span class="col-md-4" id="lnametxt"></span>
                            </div>
                            <p style="padding: 10px"></p>
                            <div class="form-group">
                                <label class="control-label col-md-2">Email:</label>
                                <label class="control-label col-md-4" id="emailtxt"></label>
                                <label class="control-label col-md-2">Phone number:</label>
                                <label class="control-label col-md-4" id="phonetxt"></label>
                            </div>
                            <p style="padding: 15px"></p>
                            <div class="form-group">
                                <label class="control-label col-md-2">Company Name:</label>
                                <label class="control-label col-md-10" id="compnametxt"></label>
                            </div>
                        </div>
                        <fieldset class="dimensions">
                            <legend class="f-border">Site Address</legend>
                            <div class="form-group">
                                <div class="row">
                                    <p class="col-xs-6">
                                        <label class="control-label">Site Type</label>
                                    </p>
                                    <p class="col-xs-6">
                                        <span class="control-label" id="sitetypetxt"></span>
                                    </p>
                                </div>
                                <div class="row">
                                    <p class="col-xs-6">
                                        <label class="control-label">Street Address:</label>
                                    </p>
                                    <p class="col-xs-6">
                                        <span class="control-label" id="streetaddresstxt"></span>
                                    </p>
                                </div>
                                <div class="row">
                                    <p class="col-xs-6">
                                        <label class="control-label">Apt/Unit#:</label>
                                    </p>
                                    <p class="col-xs-6">
                                        <span class="control-label" id="unittxt"></span>
                                    </p>
                                </div>
                                <div class="row">
                                    <p class="col-xs-6">
                                        <label class="control-label">City:</label>
                                    </p>
                                    <p class="col-xs-6">
                                        <span class="control-label" id="citytxt"></span>
                                    </p>
                                </div>
                                <div class="row">
                                    <p class="col-xs-6">
                                        <label class="control-label">Province:</label>
                                    </p>
                                    <p class="col-xs-6">
                                        <span id="provincetxt"></span>
                                    </p>
                                </div>
                                <div class="row">
                                    <p class="col-xs-6">
                                        <label class="control-label">Postal Code:</label>
                                    </p>
                                    <p class="col-xs-6">
                                        <span class="control-label" id="pcodetxt"></span>
                                    </p>
                                </div>
                            </div>
                        </fieldset>

                        <fieldset class="dimensions">
                            <legend class="f-border">Job Details</legend>
                            <div class="form-group">
                                <div class="row">
                                    <p class="col-xs-6">
                                        <label class="control-label">Job Type:</label>
                                    </p>
                                    <p class="col-xs-6">
                                        <span class="control-label" id="jobtypetxt"></span>
                                    </p>
                                </div>
                                <div class="row">
                                    <p class="col-xs-6">
                                        <label class="control-label">Delivery Date and Time:</label>
                                    </p>
                                    <p class="col-xs-6">
                                        <span class="control-label" id="deldateandtimetxt"></span>
                                    </p>
                                </div>
                                <div class="row">
                                    <p class="col-xs-6">
                                        <label class="control-label">Pick up Date and Time:</label>
                                    </p>
                                    <p class="col-xs-6">
                                        <span class="control-label" id="pickupdateandtimetxt"></span>
                                    </p>
                                </div>
                            </div>
                        </fieldset>
                        <label for="resource">How did you hear about us?</label>
                        <div>
                            @{
                                List<SelectListItem> listItems = new List<SelectListItem>();
                                listItems.Add(new SelectListItem
                                {
                                    Text = "Referral",
                                    Value = "Referral"
                                });
                                listItems.Add(new SelectListItem
                                {
                                    Text = "Website",
                                    Value = "Website",
                                    Selected = true
                                });
                                listItems.Add(new SelectListItem
                                {
                                    Text = "Bins",
                                    Value = "Bins"
                                });
                                listItems.Add(new SelectListItem
                                {
                                    Text = "Saw truck",
                                    Value = "Saw truck"
                                });
                                listItems.Add(new SelectListItem
                                {
                                    Text = "Lawn Sign",
                                    Value = "Lawn Sign",
                                });
                                listItems.Add(new SelectListItem
                                {
                                    Text = "Referral / Friend",
                                    Value = "Referral / Friend"
                                });
                                listItems.Add(new SelectListItem
                                {
                                    Text = "Others",
                                    Value = "Others"
                                });
                            }

                            @Html.DropDownListFor(model => model.orders.HearingSource, listItems, "-- Select Source --", new { @class = "form-control", @id = "sitetype" })

                            @*<input type="text" class="form-control" id="resource" name="resource">*@
                            @*@Html.DropDownListFor(model => model.orders.HearingSource, new SelectList(Enum.GetValues(typeof(SourceOfHearing))), new { @class = "form-control", @id = "sitetype" })*@
                        </div>
                        <div class="space"></div> 

                        <div class="row">
                            <span class="col-md-6" style="text-align: center;"><button type="button" class="btn btn-danger" id="prev_4" style="width:50%">Previous</button></span>
                            <span class="col-md-6" style="text-align: center;"><button type="submit" class="btn btn-success" id="submit" style="width:50%">Place an order!</button></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</body>